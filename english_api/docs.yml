openapi: 3.0.0
info:
  title: API English App
  description: Api for getting and setting data
  version: 0.0.1
# servers:
#   product:
#     url: http://localhost:5000/api
tags:
  - name: Auth
    description: Requests for auth
components:
  schemas:
    Response:
      type: object
      properties:
        status:
          type: string
          example: "OK"
        description:
          type: string
          example: Example of description
        data:
          type: object
          $ref: '#/components/schemas/Person'
        status_code:
          type: integer
          example: 0
    Response_auth:
      type: object
      properties:
        status:
          type: string
          example: "OK"
        description:
          type: string
          example: Example of description
        data:
          type: object
          $ref: '#/components/schemas/Person_auth'
    Respanse_all:
      type: object
      properties:
        status:
          type: string
          example: "OK"
        description:
          type: string
          example: Example of description
        data:
          type: array
          items:
            type: object
            $ref: '#/components/schemas/Person'
    Response_fail:
      type: object
      properties:
        status:
          type: string
          example: "FAILURE"
        description:
          type: string
          example: Explain an error
        data:
          type: object
          example: {}
        status_code:
          type: integer
          example: 3
    status_code:
      type: object
      properties:
        0:
          type: string
          example: "Все штатно"
        1:
          type: string
          example: "Телефон уже есть в БД"
        2:
          type: string
          example: "Email уде есть в БД"
        3:
          type: string
          example: "Недостаточно данных для регистрации"
        4:
          type: string
          example: "Логин и пароль не совпадают"
    Person_auth:
      type: object
      properties:
        id:
          type: integer
          example: 12
        email:
          type: string
          example: null
        phone:
          type: string
          example: 79166837182
        auth_token:
          type: string
          example: "now it just id of user, in future it will be smth like JWT"
    Person:
      type: object
      properties:
        id:
          type: integer
          example: 12
        email:
          type: string
          example: null
        phone:
          type: string
          example: 79166837182
paths:
  /api/register:
    post:
      tags:
        - Auth
      summary: Registeration new user.
      description: Path for request to register user in database.
      parameters:
        - in: query
          name: phone
          description: Номер телефона пользователя. Обязательное поле, если не вводится email
          required: true
          schema:
            type: string
        - in: query
          name: password
          description: Пароль пользователя
          required: true
          schema:
            type: string
        - in: query
          name: email
          required: true
          description: Email пользователя. Обязательное поле, если не вводится номер телефона
      responses:
        '200':
          description: Ok response
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/schemas/Response'
        '400':
          description: Failure response
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/schemas/Response_fail'
  /api/auth:
    post:
      tags:
        - Auth
      summary: Request to authorize user.
      description: This request will return an authorization token for signing subsequent requests
      parameters:
        # - in: header
        #   name: auth_token
        #   description: auth_token for recognize the user. send into header
        #   required: true
        #   schema:
        #     type: integer
        - in: query
          name: phone
          description: Номер телефона пользователя. Обязательное поле, если не вводится email
          required: true
          schema:
            type: string
        - in: query
          name: password
          description: Пароль пользователя
          required: true
          schema:
            type: string
        - in: query
          name: email
          required: true
          description: Email пользователя. Обязательное поле, если не вводится номер телефона
      responses:
        '200':
          description: Ok response
          content:
            application/json:
              schema: 
                type: object
                $ref: '#/components/schemas/Response_auth'
        '400':
          description: Failure response
          content:
            application/json:
              schema: 
                type: object
                $ref: '#/components/schemas/Response_fail'