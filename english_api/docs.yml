openapi: 3.0.0
info:
  title: API English App
  description: Api for getting and setting data
  version: 0.0.1
# servers:
#   product:
#     url: http://localhost:5000/api
tags:
  - name: Auth
    description: Requests for auth
  - name: Word
    description: Requests for auth
components:
  schemas:
    Response:
      type: object
      properties:
        status:
          type: string
          example: "OK"
        description:
          type: string
          example: Example of description
        data:
          type: object
          $ref: '#/components/schemas/Person'
        status_code:
          type: integer
          example: 0
    Response_auth:
      type: object
      properties:
        status:
          type: string
          example: "OK"
        description:
          type: string
          example: Example of description
        data:
          type: object
          $ref: '#/components/schemas/Person_auth'
    Respanse_all:
      type: object
      properties:
        status:
          type: string
          example: "OK"
        description:
          type: string
          example: Example of description
        data:
          type: array
          items:
            type: object
            $ref: '#/components/schemas/Person'
        status_code:
          type: integer
          example: 3
    Response_fail:
      type: object
      properties:
        status:
          type: string
          example: "FAILURE"
        description:
          type: string
          example: Explain an error
        data:
          type: object
          example: {}
        status_code:
          type: integer
          example: 3
    Respanse_word:
      type: object
      properties:
        status:
          type: string
          example: "OK"
        description:
          type: string
          example: Example of description
        data:
          type: array
          items:
            type: object
            $ref: '#/components/schemas/word'
        status_code:
          type: integer
          example: 3
    Response_new_word:
      type: object
      properties:
        status:
          type: string
          example: "OK"
        description:
          type: string
          example: Example of description
        data:
          type: object
          $ref: '#/components/schemas/new_word'
        status_code:
          type: integer
          example: 3
    Response_know_word:
      type: object
      properties:
        status:
          type: string
          example: "OK"
        description:
          type: string
          example: OK
        data:
          type: object
        status_code:
          type: integer
          example: 0
    Response_option_1:
      type: object
      properties:
        status:
          type: string
          example: "OK"
        description:
          type: string
          example: Example of description
        data:
          type: object
          $ref: '#/components/schemas/option_1'
        status_code:
          type: integer
          example: 3
    option_1:
      type: object
      properties:
        word:
          type: string
          example: "Apple"
        options:
          type: array
          items:
            type: string
          example: ["Яблоко", "Мандарин", "Кефир", "Пляж"]
        answer:
          type: string
          example: Яблоко
    word:
      type: object
      properties:
        word_id:
          type: integer
          example: 4
        word:
          type: string
          example: "apple"
        status:
          type: integer
          example: 1
    new_word:
      type: object
      properties:
        word_id:
          type: integer
          example: 4
        word_en:
          type: string
          example: "apple"
        word_ru:
          type: string
          example: "яблоко"
        exapmle_en:
          type: string
          example: "This is apple"
        example_ru:
          type: string
          example: "Это яблоко"
        transcription:
          type: string
          example: "[ˈapəl]"
        audio_path:
          type: string
          example: "https://..../statis/audio.avi"
        image_path:
          type: string
          example: "https://..../statis/img.webm"
        status:
          type: integer
          example: 1
    status_code:
      type: object
      properties:
        0:
          type: string
          example: "Все штатно"
        1:
          type: string
          example: "Телефон уже есть в БД"
        2:
          type: string
          example: "Email уде есть в БД"
        3:
          type: string
          example: "Недостаточно данных для регистрации"
        4:
          type: string
          example: "Логин и пароль не совпадают"
        5:
          type: string
          example: "Доступ запрещен. Не авторизован"
    Person_auth:
      type: object
      properties:
        id:
          type: integer
          example: 12
        email:
          type: string
          example: null
        phone:
          type: string
          example: 79166837182
        auth_token:
          type: string
          example: "now it just id of user, in future it will be smth like JWT"
    Person:
      type: object
      properties:
        id:
          type: integer
          example: 12
        email:
          type: string
          example: null
        phone:
          type: string
          example: 79166837182
paths:
  /api/register:
    post:
      tags:
        - Auth
      summary: Registeration new user.
      description: Path for request to register user in database.
      parameters:
        - in: query
          name: phone
          description: Номер телефона пользователя. Обязательное поле, если не вводится email
          required: true
          schema:
            type: string
        - in: query
          name: password
          description: Пароль пользователя
          required: true
          schema:
            type: string
        - in: query
          name: email
          required: true
          description: Email пользователя. Обязательное поле, если не вводится номер телефона
          schema:
            type: string
      responses:
        '200':
          description: Ok response
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/schemas/Response'
        '400':
          description: Failure response
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/schemas/Response_fail'
  /api/auth:
    post:
      tags:
        - Auth
      summary: Request to authorize user.
      description: This request will return an authorization token for signing subsequent requests
      parameters:
        # - in: header
        #   name: auth_token
        #   description: auth_token for recognize the user. send into header
        #   required: true
        #   schema:
        #     type: integer
        - in: query
          name: phone
          description: Номер телефона пользователя. Обязательное поле, если не вводится email
          required: true
          schema:
            type: string
        - in: query
          name: password
          description: Пароль пользователя
          required: true
          schema:
            type: string
        - in: query
          name: email
          required: true
          description: Email пользователя. Обязательное поле, если не вводится номер телефона
          schema:
            type: string
      responses:
        '200':
          description: Ok response
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/schemas/Response_auth'
        '400':
          description: Failure response
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/schemas/Response_fail'
  /api/words:
    post:
      tags:
        - Word
      summary: Получение слов для пользователя
      description: Метод предполагает отправку аутиентификатора в заголовках запроса и получение списка слов для пользователя. Слов придет не больше 10 штук. Слова возвращаются в массиве объектов `data`
      parameters:
        - in: header
          name: auth_token
          description: уникальный аутентификатор пользователя, полученные в ответ на запрос к /api/auth
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Успешный пример ответа
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/schemas/Respanse_word'
        '403':
          description: Ошибка авторизации
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/schemas/Response_fail'
  /api/new_word:
    post:
      tags:
        - Word
      summary: Отправка запроса на получение нового слова
      description: Метод для получения нового слова (Статусы `1` или `2`). В ответ уходит вся информация о слове, что есть.
      parameters:
        - in: header
          name: auth_token
          description: Уникальный аутентификатор пользователя, полученные в ответ на запрос к /api/auth
          required: true
          schema:
            type: string
        - in: query
          name: word_id
          description: id слова, данные которого нужно прислать
          required: true
          schema:
            type: integer
        - in: query
          name: status
          description: status слова, данные которого нужно прислать
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Штатная отработка запроса. Возвращает данные слова в объекте `data`
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/schemas/Response_new_word'
        '403':
          description: Ошибка авторизации
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/schemas/Response_fail'
        '400':
          description: Недостаточно данных. Либо `word_id` либо `status`. Сообщение о том, что именно не полученно будет описано в `description`
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/schemas/Response_fail'
  /api/know_this_word:
    post:
      tags:
        - Word
      summary: Метод, исключающий слово из потока обучения
      description: Метод для ситуации, когда пользователь знает слово и его нужно внести категорию изученных.
      parameters:
        - in: header
          name: auth_token
          description: Уникальный аутентификатор пользователя, полученные в ответ на запрос к /api/auth
          required: true
          schema:
            type: string
        - in: query
          name: word_id
          description: id слова, данные которого нужно прислать
          required: true
          schema:
            type: integer
        - in: query
          name: status
          description: status слова, данные которого нужно прислать
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Штатная отработка метода
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/schemas/Response_know_word'
        '403':
          description: Ошибка авторизации
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/schemas/Response_fail'
        '400':
          description: Недостаточно данных. Либо `word_id` либо `status`. Сообщение о том, что именно не полученно будет описано в `description`
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/schemas/Response_fail'
  /api/option_1:
    post:
      tags:
        - Word
      summary: Получение данных для первого варианта викторины
      description: Возвращает данные для первого варианта викторины, когда задается английское слово, и на выбо 4 русских слова.
      parameters:
        - in: header
          name: auth_token
          description: Уникальный аутентификатор пользователя, полученные в ответ на запрос к /api/auth
          required: true
          schema:
            type: string
        - in: query
          name: word_id
          description: id слова, данные которого нужно прислать
          required: true
          schema:
            type: integer
        - in: query
          name: status
          description: status слова, данные которого нужно прислать
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Штатная отработка метода
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/schemas/Response_option_1'
        '403':
          description: Ошибка авторизации
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/schemas/Response_fail'
        '400':
          description: Недостаточно данных. Либо `word_id` либо `status`. Сообщение о том, что именно не полученно будет описано в `description`
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/schemas/Response_fail'